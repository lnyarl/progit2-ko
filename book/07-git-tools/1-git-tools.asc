[[_git_tools]]
== Git 도구

지금까지 일상적으로 자주 사용하는 명령어들과 몇 가지 Workflow를 배웠다. 파일을 추적하고 커밋하는 등의 기본적인 명령어뿐만 아니라 Staging Area가 왜 좋은지도 배웠고 가볍게 토픽 브랜치를 만들고 Merge하는 방법도 다뤘다. 이제는 Git 저장소를 사용하여 소스코드 관리를 충분히 해낼 수 있을 것이다.

이 장에서는 일상적으로 사용하지는 않지만 위급한 상황에서 반드시 필요한 Git 도구들을 살펴본다.

include::sections/revision-selection.asc[]

include::sections/interactive-staging.asc[]

include::sections/stashing-cleaning.asc[]

include::sections/signing.asc[]

include::sections/searching.asc[]

include::sections/rewriting-history.asc[]

include::sections/reset.asc[]

include::sections/advanced-merging.asc[]

include::sections/rerere.asc[]

include::sections/debugging.asc[]

include::sections/submodules.asc[]

include::sections/bundling.asc[]

include::sections/replace.asc[]

include::sections/credentials.asc[]

=== Summary

You’ve seen a number of advanced tools that allow you to manipulate your commits and staging area more precisely.
When you notice issues, you should be able to easily figure out what commit introduced them, when, and by whom.
If you want to use subprojects in your project, you’ve learned how to accommodate those needs.
At this point, you should be able to do most of the things in Git that you’ll need on the command line day to day and feel comfortable doing so.
